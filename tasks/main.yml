---
# tasks file for cyhy_core

#
# Grab the cyhy-core code
#
- name: Create the /var/local/cyhy/core directory
  file:
    path: /var/local/cyhy/core
    state: directory

- name: Download and untar the cyhy-core tarball
  unarchive:
    src: "https://api.github.com/repos/jsf9k/cyhy-core/tarball/develop?\
    access_token={{ github_oauth_token }}"
    dest: /var/local/cyhy/core
    remote_src: yes
    extra_opts:
      - "--strip-components=1"

#
# Install cyhy-core
#
- name: Install cyhy-core
  pip:
    name: file:///var/local/cyhy/core

#
# Download and extract GeoIP database.
#
- name: Create the /temp/geoip directory
  file:
    path: /tmp/geoip
    state: directory

- name: Create the /usr/local/share/GeoIP/ directory
  file:
    path: /usr/local/share/GeoIP/
    state: directory

- name: Get GeoIP database and check (md5)
  get_url:
    url: "https://download.maxmind.com/app/geoip_download?\
    edition_id=GeoIP2-City&license_key={{ geoip_license_key }}&suffix=tar.gz"
    dest: /tmp/geoip/GeoIP2-City.tar.gz
    checksum: "md5:{{ lookup('url', 'https://download.maxmind.com/app/\
    geoip_download?edition_id=GeoIP2-City&license_key=\
    {{ geoip_license_key }}&suffix=tar.gz.md5') }}"

- name: Extract GeoIP database
  unarchive:
    src: /tmp/geoip/GeoIP2-City.tar.gz
    dest: /usr/local/share/GeoIP/
    remote_src: yes
    extra_opts:
      - "--strip-components=1"

- name: Check if the downloaded tar.gz file exists
  stat:
    path: /tmp/geoip/GeoIP2-City.tar.gz
  register: temp_file

- name: Delete the tar.gz file if it exists
  file:
    path: /tmp/geoip/GeoIP2-City.tar.gz
    state: absent
  when: temp_file.stat.exists == True
